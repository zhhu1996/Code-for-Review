class Solution:
    def newInteger(self, n: int) -> int:
        """移除9
        1. 从最高位数字开始确定, 一直到最低位数字也确定
        n<=10:  9
        n<=100: 9, 19, 29, 39,49,59,69,79,89,90,91,...,99
        n <= 1000: 
            109, 119, 129, ... , 199
            209, 219, 229, ... , 299
        f(1)  = 0                           g(1) = 1
        f(10) = 1                           g(10) = 10-f(10) = 9
        f(100) = 19 = 1*9 + 10              g(100) = 100-f(100) = 81
        f(1000) = 19*9 + 100                g(1000) = 1000 - f(1000)
        f(10000) = 9*f(1000) + 1000         g(10000) = 10000 - f(10000)

        2. 利用九进制直接求第n个数字
        """
        # 1.
        f, g = {}, {}
        f[1], g[1] = 0, 1
        i = 1
        while g[i] < n:
            next_i = i * 10
            f[next_i] = f[i] * 9 + i
            g[next_i] = next_i - f[next_i]
            i = next_i
        i = i // 10 # g[i] < n的最大i
        res = 0
        cand = [1,2,3,4,5,6,7,8,10]
        while n >= 10:
            if n - g[i] >= 0:
                n = n - g[i]
                res += i
            else:
                i = i // 10
        if n > 0: # 正好找到的话n=0, n>0说明还有个位数需要查找
            res += cand[n-1]
        return res